#include <ooo_cpu.h>
#include "tage.h"
#include "loop_pred.h"

Tage* tage;
LoopPred* loop;
uint64_t loop_correct = 0;                   // A counter to decide whose prediction to use
uint8_t tage_pred, loop_pred;   // The predictions of tage and loop predictor

// Updates the counter based on taken/not-taken
void ctr_update (uint8_t taken) {
    if (taken == loop_pred) {
        if (loop_correct < 127) loop_correct++;
    }
    else if (loop_correct > -126) loop_correct--;
}

// Initialises the predictor
void O3_CPU::initialize_branch_predictor() {
    tage = new Tage();                      // tage predictor component for each cpu 
    loop = new LoopPred();                  // loop predictor component for each cpu
}

// Predicts whether branch is taken or not
uint8_t O3_CPU::predict_branch(uint64_t ip) {
    loop_pred = loop->get_prediction(ip);
    tage_pred = tage->predict(ip);
    if ((loop->is_valid) && (loop_correct >= 0)) 
        return loop_pred;
    return tage_pred;
}

// Updates the predictor based on the last branch result
void O3_CPU::last_branch_result(uint64_t ip, uint8_t taken) {
    tage->last_branch_result(ip, taken);
    loop->update_entry(taken, tage_pred);
    if (loop->is_valid && (tage_pred != loop_pred)) ctr_update(taken);
}